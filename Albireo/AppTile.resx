<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Det.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>